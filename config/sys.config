%% -*- erlang -*-

[{kernel,
  [{logger_level, debug},
   {logger,
    [{handler,
      default,
      logger_std_h,
      #{level => info,
        filters => [],
        formatter =>
          {logger_formatter,
           #{single_line => true,
             legacy_header => false,
             template => [time, " ", level, " [", mfa, "] ", msg, "\n"]}},
        config => #{file => "timetracker.log"}}},
     {handler,
      log_debug,
      logger_std_h,
      #{level => debug,
        filters => [],
        formatter =>
          {logger_formatter,
           #{single_line => true,
             legacy_header => false,
             template => [time, " ", level, " [", mfa, "] ", msg, "\n"]}},
        config => #{file => "timetracker-debug.log"}}}
     ]}
  ]},

 {timetracker,
  [%%
   %% Period of inactivity after which you are considered to be
   %% inactive.
   {inactivity_threshold, {180, second}},
   %%
   %% How often to poll input sources
   {activity_check_interval, {1000, millisecond}},
   %%
   %% How long is a work day
   {workday_length, {28800, second}},
   %%
   %% Minimum time between popups saying you have worked enough
   {min_notification_interval, {10, minute}},
   %%
   %% Where to save things
   {db_filename, "/tmp/timetracker.dets"},
   %%
   %% How to display a popup. This string will be passed to
   %% io_lib:format/2 and receive the message as a string.
   %%
   %% {display_dialog_fmt, "xmessage -center -timeout 30 '~s'"},
   %% {display_dialog_fmt, "notify-send '~s'"},
   {display_dialog_fmt,
    "zenity --title 'Timetracker' --timeout=30 --warning --no-wrap --text '~s'"},
   %%
   %% Input sources. You might need to change these.
   {sources,
    [{tt_xinput_source, kbd, [13]},
     {tt_xinput_source, mouse, [14]},
     {tt_video_source, webcam, []}]}]}].
